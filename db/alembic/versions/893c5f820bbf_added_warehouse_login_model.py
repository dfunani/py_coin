"""Added Warehouse Login Model

Revision ID: 893c5f820bbf
Revises: e2e01ce996d0
Create Date: 2024-04-25 15:01:11.071876

"""

from datetime import datetime
from typing import Sequence, Union
from uuid import uuid4

from alembic import op
import sqlalchemy as sa

from lib.utils.constants.users import Country, LoginMethod


# revision identifiers, used by Alembic.
revision: str = "893c5f820bbf"
down_revision: Union[str, None] = "e2e01ce996d0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "login_history",
        sa.Column(
            "id",
            sa.UUID(as_uuid=True),
            primary_key=True,
        ),
        sa.Column(
            "user_id",
            sa.UUID(as_uuid=True),
            sa.ForeignKey("users.users.id"),
            nullable=False,
        ),
        sa.Column(
            "login_id",
            sa.UUID(as_uuid=True),
            default=sa.text(f"'{str(uuid4())}'"),
            nullable=False,
        ),
        sa.Column(
            "session_id",
            sa.UUID(as_uuid=True),
            nullable=True,
        ),
        sa.Column(
            "login_date",
            sa.DateTime,
            nullable=False,
            default=sa.text("CURRENT_TIMESTAMP"),
        ),
        sa.Column(
            "login_location", sa.Enum(Country, name="login_country"), nullable=True
        ),
        sa.Column("login_device", sa.String(256), nullable=True),
        sa.Column(
            "login_method",
            sa.Enum(LoginMethod, name="login_method"),
            nullable=True,
            default=LoginMethod.EMAIL,
        ),
        sa.Column("logged_in", sa.Boolean, nullable=False, default=True),
        sa.Column("logout_date", sa.DateTime, nullable=True),
        sa.Column("authentication_token", sa.String, nullable=True),
        schema="warehouse",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("login_history", schema="warehouse")
    op.execute("DROP TYPE IF EXISTS login_country CASCADE")
    op.execute("DROP TYPE IF EXISTS login_method CASCADE")
    # ### end Alembic commands ###
