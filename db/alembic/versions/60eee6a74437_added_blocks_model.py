"""Added Blocks Model

Revision ID: 60eee6a74437
Revises: 0b0f645bb95f
Create Date: 2024-05-08 23:15:07.217273

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from lib.utils.constants.blocks import BlockType

# revision identifiers, used by Alembic.
revision: str = "60eee6a74437"
down_revision: Union[str, None] = "0b0f645bb95f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "blocks",
        sa.Column("id", sa.UUID(as_uuid=True), primary_key=True, nullable=False),
        sa.Column("block_id", sa.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "transaction_id",
            sa.UUID(as_uuid=True),
            sa.ForeignKey("blockchain.transactions.id"),
            unique=True,
            nullable=True,
        ),
        sa.Column(
            "contract_id",
            sa.UUID(as_uuid=True),
            sa.ForeignKey("blockchain.contracts.id"),
            unique=True,
            nullable=True,
        ),
        sa.Column(
            "previous_block_id",
            sa.UUID(as_uuid=True),
            nullable=True,
        ),
        sa.Column(
            "next_block_id",
            sa.UUID(as_uuid=True),
            nullable=True,
        ),
        sa.Column(
            "block_type",
            sa.Enum(BlockType, name="block_type"),
            nullable=False,
            default=BlockType.UNIT,
        ),
        sa.Column(
            "created_date",
            sa.DateTime,
            default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_date",
            sa.DateTime,
            default=sa.text("CURRENT_TIMESTAMP"),
            onupdate=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        schema="blockchain",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("blocks", schema="blockchain")
    op.execute("DROP TYPE IF EXISTS block_type CASCADE")
    # ### end Alembic commands ###
