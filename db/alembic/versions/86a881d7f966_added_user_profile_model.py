"""Added User Profile Model

Revision ID: 86a881d7f966
Revises: 14e2bd506750
Create Date: 2024-04-08 23:39:03.852511

"""

from datetime import datetime
from typing import Sequence, Union
from uuid import uuid4

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from lib.utils.constants.users import (
    AccountCountry,
    AccountLanguage,
    AccountOccupation,
    Gender,
    ProfileInterest,
    Status,
)

# revision identifiers, used by Alembic.
revision: str = "86a881d7f966"
down_revision: Union[str, None] = "14e2bd506750"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_profiles",
        sa.Column(
            "id",
            sa.String(256),
            default=sa.text(f"'{str(uuid4())}'"),
            primary_key=True,
        ),
        sa.Column("profile_id", sa.String(256), default=sa.text(f"'{str(uuid4())}'")),
        # account_id: sa.Column[str] = sa.Column(
        #     "account_id", ForeignKey("accounts.account_id"), nullable=False
        # )
        sa.Column("first_name", sa.String(256), nullable=False),
        sa.Column("last_name", sa.String(256), nullable=False),
        sa.Column("username", sa.String(256), nullable=False),
        sa.Column("date_of_birth", sa.Date, nullable=True),
        sa.Column("gender", sa.Enum(Gender, name="gender"), nullable=True),
        sa.Column("profile_picture", sa.LargeBinary, nullable=True),
        sa.Column("mobile_number", sa.String(256), nullable=True),
        sa.Column(
            "country", sa.Enum(AccountCountry, name="account_country"), nullable=True
        ),
        sa.Column(
            "language",
            sa.Enum(AccountLanguage, name="account_language"),
            default=AccountLanguage.ENGLISH,
        ),
        sa.Column(
            "biography", sa.String(256), default="This user has not provided a bio yet."
        ),
        sa.Column(
            "occupation",
            sa.Enum(AccountOccupation, name="account_occupation"),
            default=AccountOccupation.OTHER,
        ),
        sa.Column(
            "interests",
            sa.ARRAY(sa.Enum(ProfileInterest, name="profile_interest")),
            default=[],
        ),
        sa.Column("social_media_links", sa.JSON, default={}),
        sa.Column(
            "profile_status", sa.Enum(Status, name="profile_status"), default=Status.NEW
        ),
        sa.Column("created_date", sa.DateTime, default=sa.text("CURRENT_TIMESTAMP")),
        sa.Column(
            "updated_date",
            sa.DateTime,
            default=sa.text("CURRENT_TIMESTAMP"),
            onupdate=sa.text("CURRENT_TIMESTAMP"),
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_profiles")
    op.execute("DROP TYPE IF EXISTS gender CASCADE")
    op.execute("DROP TYPE IF EXISTS account_country CASCADE")
    op.execute("DROP TYPE IF EXISTS account_language CASCADE")
    op.execute("DROP TYPE IF EXISTS account_occupation CASCADE")
    op.execute("DROP TYPE IF EXISTS profile_interest CASCADE")
    op.execute("DROP TYPE IF EXISTS profile_status CASCADE")
    # ### end Alembic commands ###
